/* This file has been generated by the CMake hawaii_translation_loader().
 * It loads Qt application translations.
 *
 * Attention: All changes will be overwritten!!!
 */

#ifndef QT_NO_TRANSLATION

#include <QtCore/QCoreApplication>
#include <QtCore/QLocale>
#include <QtCore/QStandardPaths>
#include <QtCore/QTranslator>
#include <QtCore/QLibraryInfo>

static void _HawaiiTranslationLoader()
{
    QString locale = QLocale::system().name();

    // Load Qt translations
    QTranslator *qtTranslator = new QTranslator(qApp);
    if (qtTranslator->load(QStringLiteral("qt_%1").arg(locale), QLibraryInfo::location(QLibraryInfo::TranslationsPath))) {
        qApp->installTranslator(qtTranslator);
    } else {
        delete qtTranslator;
    }

    // Find the translations directory
    const QString translationsDir =
        QStandardPaths::locate(QStandardPaths::GenericDataLocation,
                               QLatin1String("@ARGS_TRANSLATIONS_DIR@"),
                               QStandardPaths::LocateDirectory);

    // Load application translations
    QTranslator *appTranslator = new QTranslator(qApp);
    if (appTranslator->load(QStringLiteral("%1/@ARGS_CATALOG_NAME@_%2").arg(translationsDir, locale))) {
        QCoreApplication::installTranslator(appTranslator);
    } else if (locale == QLatin1String("C") ||
                locale.startsWith(QLatin1String("en"))) {
        // English is the default, it's translated anyway
        delete appTranslator;
    }
}

Q_COREAPP_STARTUP_FUNCTION(_HawaiiTranslationLoader)

#endif
